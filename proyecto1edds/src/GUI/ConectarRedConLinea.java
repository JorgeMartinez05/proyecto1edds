/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import EDD.Lista;
import EDD.Vertice;
import Funcionalidades.Funcion;
import static GUI.AgregarEstaciones.nuevosVertices;
import static GUI.CargaDeRed.grafoEDD;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author eabdf
 */
public class ConectarRedConLinea extends javax.swing.JFrame {

    DefaultComboBoxModel modelEstacionesLinea = new DefaultComboBoxModel();
    DefaultComboBoxModel modelEstacionesRed = new DefaultComboBoxModel();
    private Funcion function = new Funcion();

    /**
     * Creates new form ConectarRedConLinea
     */
    public ConectarRedConLinea() {
        initComponents();
        this.setVisible(true);
        this.setResizable(false);
        this.setLocationRelativeTo(null);

        this.llenarComboBoxs();
    }

    private void llenarComboBoxs() {
        Lista nombresRed = function.mostrarEstaciones(grafoEDD);
        Lista nombresLinea = function.mostrarListaVertice(nuevosVertices);

        for (int i = 0; i < nombresRed.getSize(); i++) {
            modelEstacionesRed.addElement(nombresRed.getValor(i));
        }

        for (int i = 0; i < nombresLinea.getSize(); i++) {
            modelEstacionesLinea.addElement(nombresLinea.getValor(i));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        estacionesLinea = new javax.swing.JComboBox<>();
        estacionesRed = new javax.swing.JComboBox<>();
        conectarLineaRed = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        estacionesLinea.setModel(modelEstacionesLinea);
        jPanel2.add(estacionesLinea, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, -1, -1));

        estacionesRed.setModel(modelEstacionesRed);
        jPanel2.add(estacionesRed, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, -1, -1));

        conectarLineaRed.setText("Conectar linea con red");
        conectarLineaRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conectarLineaRedActionPerformed(evt);
            }
        });
        jPanel2.add(conectarLineaRed, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 420, 320));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void conectarLineaRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conectarLineaRedActionPerformed
        for (int i = 0; i < nuevosVertices.getSize(); i++) {
            Vertice verticeActual = (Vertice) nuevosVertices.getValor(i);
            grafoEDD.InsertarVertice(verticeActual);
        }
        
        String nombre1 = (String) estacionesRed.getSelectedItem();
        String nombre2 = (String) estacionesLinea.getSelectedItem();
        
        grafoEDD.agregarConexion(nombre1, nombre2);
        
        MenuPrincipal menuPrincipal = new MenuPrincipal();
        this.dispose();
    }//GEN-LAST:event_conectarLineaRedActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConectarRedConLinea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConectarRedConLinea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConectarRedConLinea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConectarRedConLinea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConectarRedConLinea().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton conectarLineaRed;
    private javax.swing.JComboBox<String> estacionesLinea;
    private javax.swing.JComboBox<String> estacionesRed;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
