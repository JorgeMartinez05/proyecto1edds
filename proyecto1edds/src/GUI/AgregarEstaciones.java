/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import EDD.Lista;
import EDD.Vertice;
import Funcionalidades.Funcion;
import javax.swing.JOptionPane;
import proyecto1edds.Estacion;

/**
 *
 * @author jorge
 */

public class AgregarEstaciones extends javax.swing.JFrame {
    private Lista linea = new Lista();
    private Funcion function = new Funcion();
    
    public static Lista nuevosVertices = new  Lista();
    

    /**
     * Creates new form AgregarEstaciones
     */
    public AgregarEstaciones() {
        initComponents();
        this.setVisible(true);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        lineaNueva.setText(function.mostrarLinea(linea));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        inputEstacion = new javax.swing.JTextField();
        aggEstacion = new javax.swing.JButton();
        siguientePaso = new javax.swing.JButton();
        Salir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lineaNueva = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel1.setText("Agregacion Lineas");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Agregar Estaciones");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, -1, -1));

        jLabel3.setText("Nombre de la Estacion:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, -1, -1));
        jPanel1.add(inputEstacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 210, -1));

        aggEstacion.setText("Agregar Estacion");
        aggEstacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aggEstacionActionPerformed(evt);
            }
        });
        jPanel1.add(aggEstacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        siguientePaso.setText("Siguiente");
        siguientePaso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguientePasoActionPerformed(evt);
            }
        });
        jPanel1.add(siguientePaso, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 330, -1, -1));

        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });
        jPanel1.add(Salir, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, -1, -1));

        lineaNueva.setColumns(20);
        lineaNueva.setRows(5);
        jScrollPane1.setViewportView(lineaNueva);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 260, 110));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 470, 380));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aggEstacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aggEstacionActionPerformed
        if (!inputEstacion.getText().isEmpty()) {
            String nombreEstacion = inputEstacion.getText();
            linea.insertarFinal(nombreEstacion);
            inputEstacion.setText("");
            JOptionPane.showMessageDialog(null, "Estacion agregada exitosamente a la linea nueva.");

            lineaNueva.setText(function.mostrarLinea(linea));
        } else {
            JOptionPane.showMessageDialog(null, "El input no puede estar vacio.");
        }
    }//GEN-LAST:event_aggEstacionActionPerformed

    private void siguientePasoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguientePasoActionPerformed
        if (!linea.isEmpty()) {

            for (int i = 0; i < linea.getSize() - 1; i++) {
                String nombreEstacion = (String) linea.getValor(i); 
                String nombreFuturo = (String) linea.getValor(i + 1);    

                Estacion estacionNueva = new Estacion(nombreEstacion);
                Estacion estacionFutura = new Estacion(nombreFuturo);

                Vertice verticeNuevo = function.obtenerOcrearVertice(nombreEstacion, nuevosVertices);
                Vertice verticeFuturo = function.obtenerOcrearVertice(nombreFuturo, nuevosVertices);
                
                verticeFuturo.getAdyacentes().insertarFinal(verticeNuevo);
                verticeNuevo.getAdyacentes().insertarFinal(verticeFuturo);     
            }
            nuevosVertices.mostrar();

            

        } else {
            JOptionPane.showMessageDialog(null, "La linea esta vacia. Debes agregar estaciones a la linea para continuar.");
        }
    }//GEN-LAST:event_siguientePasoActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        if (!linea.isEmpty()) {

            for (int i = 0; i < linea.getSize() - 1; i++) {
                String nombreEstacion = (String) linea.getValor(i); 
                String nombreFuturo = (String) linea.getValor(i + 1);    

                Estacion estacionNueva = new Estacion(nombreEstacion);
                Estacion estacionFutura = new Estacion(nombreFuturo);

                Vertice verticeNuevo = function.obtenerOcrearVertice(nombreEstacion, nuevosVertices);
                Vertice verticeFuturo = function.obtenerOcrearVertice(nombreFuturo, nuevosVertices);
                
                verticeFuturo.getAdyacentes().insertarFinal(verticeNuevo);
                verticeNuevo.getAdyacentes().insertarFinal(verticeFuturo);     
            }
            nuevosVertices.mostrar();

          
        } else {
            JOptionPane.showMessageDialog(null, "La linea esta vacia. Debes agregar estaciones a la linea para continuar.");
        }
    }//GEN-LAST:event_SalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(AgregarEstaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(AgregarEstaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(AgregarEstaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(AgregarEstaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            new AgregarEstaciones().setVisible(true);
        }
    });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Salir;
    private javax.swing.JButton aggEstacion;
    private javax.swing.JTextField inputEstacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea lineaNueva;
    private javax.swing.JButton siguientePaso;
    // End of variables declaration//GEN-END:variables
}
